<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用Hexo搭建个人博客网站</title>
    <url>/2020/02/03/%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">使用Hexo搭建个人博客网站</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line">	<span class="bullet">-</span> <span class="string">technology</span></span><br></pre></td></tr></table></figure>



<p>﻿### 不花一分钱使用Hexo搭建个人博客网站，从无到发表文章及更新教程</p>
<p>本文较长,也是楼主呕心沥血参考网上各种教程加上自己踩坑完成的,只希望能对你有所帮助。</p>
<h4 id="0-首先介绍一下hexo是怎么搭建的博客"><a href="#0-首先介绍一下hexo是怎么搭建的博客" class="headerlink" title="0.首先介绍一下hexo是怎么搭建的博客?"></a>0.首先介绍一下hexo是怎么搭建的博客?</h4><blockquote>
<p>本地渲染好 HTML 后，上传到服务端，代表作品就是 hexo。<br>我们在本地写好 markdown 之后，在本地将 markdown 渲染成 HTML，然后将渲染好的 HTML 上传到服务端。</p>
</blockquote>
<p>我这里采用==hexo+icarus==实现的</p>
<h2 id="一、搭建"><a href="#一、搭建" class="headerlink" title="一、搭建"></a>一、搭建</h2><p>用 Hexo 搭建，要是有一点点前端 Node 的使用经验更佳，没有当然也没关系，因为与之相关的命令并不多。使用 Hexo 需要提前在电脑上安装好 Node 和 Git ，安装成功后，就可以开始 Hexo 的安装了。步骤如下：<br>1.安装hexo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>2.在本地创建一个博客目录</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>
<p>上面这个命令执行完后，会在本地创建一个 blog 目录，这里边就是独立博客所必须的一些文件，然后进入到这个目录中，执行 npm install 命令，安装相关的依赖。<br>3.安装完成后，会生成如下目录：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── <span class="keyword">package</span>.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
<p>这里几个文件/文件夹，我们先来关注其中两个 _config.yml 和 themes 目录， _config.yml 文件中，我们可以做网站的一些基本配置，例如 网站的 title，描述，关键字、图标等，这些配置大都见名知意。如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: <span class="string">'王硕个人博客'</span> </span><br><span class="line">subtitle: <span class="string">'王硕个人博客'</span> </span><br><span class="line">description: <span class="string">'发表一些技术相关的文章以及自我反思等'</span> </span><br><span class="line">keywords: <span class="string">'java,王硕,wsuo,springboot'</span> </span><br><span class="line">author: <span class="string">'王硕'</span> </span><br><span class="line">language: zh-CN </span><br><span class="line">timezone: <span class="string">''</span></span><br></pre></td></tr></table></figure>
<p>配置完成后，定位到 blog 目录，执行 hexo s 就可以在本地启动项目了，启动成功后，浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 就可以看到网站了。</p>
<p>可以参考<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">hexo命令</a></p>
<h3 id="但是我在这里遇到了两个问题"><a href="#但是我在这里遇到了两个问题" class="headerlink" title="但是我在这里遇到了两个问题"></a>但是我在这里遇到了两个问题</h3><h4 id="1-命令行报错-YAMLException-can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-10-column-7"><a href="#1-命令行报错-YAMLException-can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-10-column-7" class="headerlink" title="1.命令行报错:YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 10, column 7:"></a>1.命令行报错:YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 10, column 7:</h4><p>解决方案: 由于是yml文件,在每一个冒号后面都要加空格,我有一个忘记加了没看到,所以报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: <span class="string">'王硕个人博客'</span></span><br></pre></td></tr></table></figure>

<p>就是上面的冒号后面要加空格</p>
<h4 id="2-登陆博客之后中文乱码"><a href="#2-登陆博客之后中文乱码" class="headerlink" title="2.登陆博客之后中文乱码"></a>2.登陆博客之后中文乱码</h4><p>解决方案: 将那个yml文件的编码改成UTF-8格式<br>我用的是edit-plus打开的,右下角可以直接改,一般的编辑器都可以改的</p>
<p>好了,到目前为止算是有一个有模有样的博客网站了</p>
<h2 id="二、修改主题"><a href="#二、修改主题" class="headerlink" title="二、修改主题"></a>二、修改主题</h2><blockquote>
<p>一般来说，主题都会自己配置一个，个人感觉 Hexo 的生态还是比较丰富的，有很多可选的主题，Hexo 默认使用的主题是 landscape 。博客在本地跑起来之后，接下来就是修改主题，主题修改的第一步就是先选一个自己认为好看的主题，选好之后，首先将之克隆到 ./themes 目录下，这个目录下原本有有一个 landscape 文件夹，里边放的默认的样式，当然开发者也可以直接将主题文件下载好拷贝进来，但是我还是建议使用 clone ，使用 clone ，假如有一天这个主题更新了，只需要 pull 一下就可以获取到最新样式了。</p>
</blockquote>
<p>不会用git的可以参考我的另一篇文章<a href="https://editor.csdn.net/md/?articleId=104134298" target="_blank" rel="noopener">git命令</a></p>
<h4 id="以-hexo-theme-next-主题为例，-clone-命令如下："><a href="#以-hexo-theme-next-主题为例，-clone-命令如下：" class="headerlink" title="以 hexo-theme-next 主题为例， clone 命令如下："></a>以 hexo-theme-next 主题为例， clone 命令如下：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd D:\develop\blog\blog</span><br><span class="line">git clone https:<span class="comment">//github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>
<p>克隆成功后，修改 hexo 的 _config.yml 文件，将主题修改为 next，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>主题创建好之后，接下来就是对主题的配置了，这个比较容易，直接参考官方文档即可。配置完成后，执行如下命令，即可看到新的主题效果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>


<h2 id="三、绑定到GitHub"><a href="#三、绑定到GitHub" class="headerlink" title="三、绑定到GitHub"></a>三、绑定到GitHub</h2><p>绑定到 Github 步骤也很简单，首先以 自己的GitHub ID.github.io 为名创建一个 public 仓库，例如我的 ID 为 wsuo，创建的仓库如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">wsuo.github.io</span><br></pre></td></tr></table></figure>
<p>创建成功之后，修改 hexo 的 _config.yml 文件，配置 GitHub 地址，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git<span class="meta">@github</span>.com:wsuo/wsuo.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>这里根据自己的地址来配置即可，配置完成后，执行如下命令：<br>在<strong>站点目录下</strong>还要在 <strong>hexo init 的根目录下</strong>执行输入下面的插件安装：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">然后启动:</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>执行完成后，就可以将数据上传到 GitHub 了<br>上传成功后，访问 <a href="https://wsuo.github.io">https://wsuo.github.io</a> 就可以看到自己的个人站点了，这是 GitHub 默认给我们提供的域名。<br>如果你对 GitHub 提供的域名不满意，也可以自己申请一个域名，分分钟就配置好了。</p>
<p>如果你访问不了你的博客:</p>
<blockquote>
<p>登陆GitHub查看仓库的setting,然后往下翻找到github pages,有一个蓝色的网址点击,那个就是了.</p>
</blockquote>
<p>每次更新文章需要做:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment">// 清除</span></span><br><span class="line"><span class="function">hexo <span class="title">g</span> <span class="params">(generate)</span></span></span><br><span class="line"><span class="function">hexo <span class="title">d</span> <span class="params">(deploy)</span></span></span><br></pre></td></tr></table></figure>
<h2 id="四、配置博客"><a href="#四、配置博客" class="headerlink" title="四、配置博客"></a>四、配置博客</h2><p>好了，到现在为止你已经可以正常的访问了，是不是挺开心的，但是有一点就是他看起来太丑了，下面我们呢就来优化一下界面，提升一下它的颜值。</p>
<h3 id="1-blog配置"><a href="#1-blog配置" class="headerlink" title="1. blog配置"></a>1. blog配置</h3><p>好了！准备进入正题！下面将带领各位怎么将一个空空如也的blog装饰成博主一样有那么一点起色的网站。博主将从零搭起，所有的操作都将在博主的笔记本上为大家做出示范。</p>
<h4 id="1-1-next主题基本配置"><a href="#1-1-next主题基本配置" class="headerlink" title="1.1 next主题基本配置"></a>1.1 next主题基本配置</h4><p>首先我们先下载<a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">next主题</a>在这里选择大家需要的版本进行下载。下载完成后，我们的blog便有了两个主要的配置文件，分别是hexo自带的<code>_config.yml</code>文件和next主题自带的<code>_config.yml</code>文件，为了方便，我们将hexo自带的<code>_config.yml</code>文件称为站点配置文件，next主题带的<code>_config.yml</code>文件称为主题配置文件。</p>
<p>首先，第一步我们来更换一下blog的主题，这一步又分为三个小步骤：</p>
<ol>
<li>将下载下来的next主题文件夹重命名为 next 。</li>
<li>将next文件夹移入blog所在的文件夹的themes 文件夹中，在这里，本人是/blog/themes</li>
<li>修改站点配置文件，在配置文件中搜索theme，将其的值改为next。注意 冒号： 后面一定要有一个空格<br>// 站点<code>_config.yml</code> 文件</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>现在主题就已经配置好了，接下来我们优化一下：继续修改站点配置文件：<br>// 站点_config.yml 文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Eternal_zttz #网站的名字</span><br><span class="line">subtitle: Saty Hungry，Stay Foolish #网站的副标题</span><br><span class="line">description: 个人blog网站 #个人的描述</span><br><span class="line">keywords:</span><br><span class="line">author: Eternal_zttz #博主的名字</span><br><span class="line">language: zh-CN #blog的语言  zh-CN 代表中文</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure>

<p>然后我们修改主题配置文件：<br>// 主题_config.yml 文件 ，搜索Schemes可找到</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>这是next的基本页面布局，默认为Muse布局，在这里，我们选择第三个Pisces</p>
<p>很好，接下来，我们在终端命令行cd 进入blog所在目录，如我是直接命名为blog，所以<code>cd blog</code>:</p>
<p>接着运行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>ok，我们的blog已经略有起色，样式已经离我们的最终样式八九不离十了，接下来，我们将对其的各个部分进行优化：</p>
<h4 id="1-2-next主题侧边栏优化"><a href="#1-2-next主题侧边栏优化" class="headerlink" title="1.2 next主题侧边栏优化"></a>1.2 next主题侧边栏优化</h4><h5 id="1-2-1-next主题页面生成"><a href="#1-2-1-next主题页面生成" class="headerlink" title="1.2.1 next主题页面生成"></a>1.2.1 next主题页面生成</h5><p>我们可以看到，hexo默认生成的页面只有两个，即<code>首页</code>和<code>归档</code> 页面，那么接下来，我们来生成我们所需的页面：</p>
<h6 id="1-2-1-1-页面的生成"><a href="#1-2-1-1-页面的生成" class="headerlink" title="1.2.1.1 页面的生成"></a>1.2.1.1 页面的生成</h6><p>首先，我们修改主题配置文件：<br>// 主题_config.yml 文件 ，搜索menu可找到</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home   #主页</span><br><span class="line">  about: /about/ || user  #关于</span><br><span class="line">  tags: /tags/ || tags   #标签</span><br><span class="line">  categories: /categories/ || th  #分类</span><br><span class="line">  archives: /archives/ || archive  #归档</span><br><span class="line">  #schedule: /schedule/ || calendar  #日程表</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap   #站点地图</span><br><span class="line">  #commonweal: /404/ || heartbeat    #公益404</span><br></pre></td></tr></table></figure>
<p>可以看到，大部分的都是注释掉了的，这里我已经把我需要的页面注释解除了，大家可以自行考虑需要的页面。<br>在这里，<strong>斜线//</strong>之间的文字是 该页面 的名字，如<code>／about／</code> ，说明我们要跳转的页面的名字为about , 而<code>||</code>后的文字是这个页面的图标名字.<br>这时候我们主页上就可以看到这几个页面，接下来实现页面的跳转：</p>
<h6 id="1-2-1-2-生成about页面"><a href="#1-2-1-2-生成about页面" class="headerlink" title="1.2.1.2 生成about页面"></a>1.2.1.2 生成about页面</h6><p>终端回到blog的根目录.运行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"about"</span></span><br></pre></td></tr></table></figure>
<p>ok,接下来关于页面的markdown自己编写就行。</p>
<h6 id="1-2-1-3-生成tags页面"><a href="#1-2-1-3-生成tags页面" class="headerlink" title="1.2.1.3 生成tags页面"></a>1.2.1.3 生成tags页面</h6><p>终端回到blog的根目录.运行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure>
<h6 id="1-2-1-4-生成categories页面"><a href="#1-2-1-4-生成categories页面" class="headerlink" title="1.2.1.4 生成categories页面:"></a>1.2.1.4 生成categories页面:</h6><p>终端回到categories的根目录.运行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure>
<p>tags和categorise页面不用自己布局，会自动根据我们的blog的布局好</p>
<h5 id="1-2-2-站内搜索的实现"><a href="#1-2-2-站内搜索的实现" class="headerlink" title="1.2.2 站内搜索的实现"></a>1.2.2 站内搜索的实现</h5><p>文章写多了，想一篇篇的去寻找可不容易，这时候，我们便需要一个站内的搜索功能，即服务别人，也能方便自己。<br>首先，我们在终端进入blog的根目录下，执行以下命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>接着，我们进入站点配置文件_config.yml,在最后新增以下内容：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>最后，打开主题配置文件_config.yml,搜索local_search,其值改为true：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br></pre></td></tr></table></figure>
<p>ok，现在站内搜索就大功告成了，一切准备就绪～</p>
<h5 id="1-2-3-个人头像设置"><a href="#1-2-3-个人头像设置" class="headerlink" title="1.2.3 个人头像设置"></a>1.2.3 个人头像设置</h5><p>要设置自己的侧边栏头像，首先，准备一张头像的图片，命名为<code>header.jpg</code>，然后，将图片放在<code>/blog/themes/next/source/images/</code>文件夹下，接着修改主题配置文件，搜索<code>avatar</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">   - url: /images/avatar.gif</span><br><span class="line">   + url: /images/header.jpg     #图片的地址</span><br><span class="line">  # If true, the avatar would be dispalyed in circle. </span><br><span class="line">  rounded: false   #设置图片是否为圆形，当图片为正方形时为圆，否则为椭圆</span><br><span class="line">  # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span><br><span class="line">  opacity: 1 #图片的透明度</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: false  #设置鼠标移到图片上后头像是否转动</span><br></pre></td></tr></table></figure>
<p>将url里面的值改为图片的地址就可以了</p>
<h5 id="1-2-4-点击个人头像回到主页面"><a href="#1-2-4-点击个人头像回到主页面" class="headerlink" title="1.2.4 点击个人头像回到主页面"></a>1.2.4 点击个人头像回到主页面</h5><p>首先，我们打开文件<code>/blog/themes/next/layout/_macro/sidebar.swig</code>,然后，修改以下内容：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">+ &lt;a href=<span class="string">"/"</span>&gt;</span><br><span class="line">    &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-author-image"</span> itemprop=<span class="string">"image"</span></span><br><span class="line">       src=<span class="string">"&#123;&#123; url_for( theme.avatar.url | default(theme.images + '/avatar.gif') ) &#125;&#125;"</span></span><br><span class="line">       alt=<span class="string">"&#123;&#123; author &#125;&#125;"</span> /&gt;</span><br><span class="line">+ &lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>ok，重新部署一下，就可以看到效果了</p>
<h5 id="1-2-5-RSS订阅设置"><a href="#1-2-5-RSS订阅设置" class="headerlink" title="1.2.5 RSS订阅设置"></a>1.2.5 RSS订阅设置</h5><p>首先，我们在终端命令行进入blog所在的目录，运行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure>
<p>接着，打开站点配置文件，在文件的末尾添加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure>
<p>然后打开主题配置文件，搜索rss，将其设置成如下所示，注意冒号后<code>要加上一个空格</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site's feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure>

<p>OK，all right</p>
<h5 id="1-2-6-社交栏设置"><a href="#1-2-6-社交栏设置" class="headerlink" title="1.2.6 社交栏设置"></a>1.2.6 社交栏设置</h5><p>在主题配置文件中，搜索social，定位到如下代码段，把social的注释取消掉，接下来，就看你需要显示什么社交网站，写上网站名+网址就行。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/yourname || github   #网站名：网址 ||图标名</span></span><br><span class="line">  简书: http:<span class="comment">//www.jianshu.com || heartbeat</span></span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>

<h5 id="1-2-7-实现侧边栏页面的圆角"><a href="#1-2-7-实现侧边栏页面的圆角" class="headerlink" title="1.2.7 实现侧边栏页面的圆角"></a>1.2.7 实现侧边栏页面的圆角</h5><ol>
<li><p>首先，我们打开<code>/blog/themes/next/source/css/_variables/Pisces.styl</code>文件，里面定义了一些常量，用来定义blog样式表的值。</p>
</li>
<li><p>然后，找到<code>$border-radius</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Borders</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line">$box-shadow-inner                 = initial;</span><br><span class="line">$box-shadow                       = initial;</span><br><span class="line"></span><br><span class="line">$border-radius-inner              = initial;</span><br><span class="line">$border-radius                    = initial;</span><br></pre></td></tr></table></figure>
<p>可以看到默认为初始值，即为0<br>改变 为<code>$border-radius = 16px;</code><br>这时候，下面的一个侧边栏弧度就已经改好了</p>
</li>
<li><p>接着，打开<code>/blog/themes/next/source/css/_schemes/Pisces/_layout.styl</code>文件</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.header-inner &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: <span class="number">0</span>;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  padding: <span class="number">0</span>;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  background: white;</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line"> -border-radius: $border-radius-inner;</span><br><span class="line"> +border-radius: $border-radius;<span class="comment">//修改上面的侧边栏的弧度</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.content-wrap &#123;</span><br><span class="line">  <span class="keyword">float</span>: right;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">  width: $content-desktop;</span><br><span class="line">  background: white;</span><br><span class="line">  min-height: <span class="number">700</span>px;</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line"> - border-radius: $border-radius-inner;</span><br><span class="line"> + border-radius: $border-radius; <span class="comment">//修改整个文章页面的弧度</span></span><br></pre></td></tr></table></figure>
<p>ok 大功告成，到此为止，我们文章的侧边栏就已经优化完毕了，当然，还有更多操作，大家可以去尝试，不过，建议没有把握之前先做好blog的备份。</p>
<h3 id="2-next主题主页面优化"><a href="#2-next主题主页面优化" class="headerlink" title="2. next主题主页面优化"></a>2. next主题主页面优化</h3><p>在上面我们已经把侧边栏的优化都已经完成了，不得不说，刚完成这一部分时我还是有很大的成就感的，接下来，我们将对我们blog的主页面进行进一步的优化。</p>
<h4 id="2-1-增加fork-me-on-github-图标"><a href="#2-1-增加fork-me-on-github-图标" class="headerlink" title="2.1 增加fork me on github 图标"></a>2.1 增加fork me on github 图标</h4><p>在这里<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub地址</a>选择一款自己喜欢的图标，然后把图标旁的代码拷贝一份，放到</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">blog/themes/next/layout/_layout.swig</span><br></pre></td></tr></table></figure>
<p>这个文件夹中，注意要放到<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下方<br>OK,这就大功告成了。</p>
<h4 id="2-2-文章背景出现阴影边框"><a href="#2-2-文章背景出现阴影边框" class="headerlink" title="2.2 文章背景出现阴影边框"></a>2.2 文章背景出现阴影边框</h4><p>这个效果实现起来很简单，打开<code>blog\themes\next\source\css\_custom\custom.styl</code>文件，放入以下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: <span class="number">60</span>px;</span><br><span class="line">   margin-bottom: <span class="number">60</span>px;</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>重新部署一下即可实现。</p>
<h4 id="2-3-“-阅读全文-”-按钮改弧度"><a href="#2-3-“-阅读全文-”-按钮改弧度" class="headerlink" title="2.3 “ 阅读全文 ” 按钮改弧度"></a>2.3 “ 阅读全文 ” 按钮改弧度</h4><p>这个功能和侧边栏改弧度的操作是差不多的，进入文件<code>/blog/themes/next/source/css/_variables/Pisces.styl</code>中，把以下代码修改一下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Button</span></span><br><span class="line"> <span class="number">1</span>. $btn-<span class="keyword">default</span>-radius           = <span class="number">2</span>px</span><br><span class="line"> <span class="number">2</span>. $btn-<span class="keyword">default</span>-radius           = <span class="number">16</span>px</span><br><span class="line">$btn-<span class="keyword">default</span>-bg               = white</span><br><span class="line">$btn-<span class="keyword">default</span>-color            = $text-color</span><br><span class="line">$btn-<span class="keyword">default</span>-border-color     = $text-color</span><br><span class="line">$btn-<span class="keyword">default</span>-hover-color      = white</span><br><span class="line">$btn-<span class="keyword">default</span>-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure>
<h4 id="2-4-为文章内容添加统计功能，文字总数-阅读时长"><a href="#2-4-为文章内容添加统计功能，文字总数-阅读时长" class="headerlink" title="2.4 为文章内容添加统计功能，文字总数+阅读时长"></a>2.4 为文章内容添加统计功能，文字总数+阅读时长</h4><ol>
<li>终端进入blog根目录，执行下面代码：</li>
</ol>
<blockquote>
<p>$ npm install hexo-symbols-count-time –save</p>
</blockquote>
<ol start="2">
<li>进入站点配置文件，为blog配置统计功能，将以下代码复制到最后：</li>
</ol>
<blockquote>
<p>symbols_count_time:<br>  symbols: true<br>  time: true<br>  total_symbols: true<br>  total_time: true</p>
</blockquote>
<ol start="3">
<li>进入主题配置文件，搜素symbols_count_time,然后把要显示的改为true.<br>更深入的操作大家可以看github上的说明。<br>PS：如果大家配置完成，然后检查无误后，打开页面依旧没有显示，不要着急，第一次显示可能会比较慢，可以休息一会。</li>
</ol>
<h4 id="2-5-为文章中的代码块增加一键复制功能"><a href="#2-5-为文章中的代码块增加一键复制功能" class="headerlink" title="2.5 为文章中的代码块增加一键复制功能"></a>2.5 为文章中的代码块增加一键复制功能</h4><p>在next v6.3.0 版本中，这个功能已经是集成了的，我们进入站点配置文件，搜索copy_button。把它的值改为true即可：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Add copy button on codeblock</span><br><span class="line">  copy_button:copy</span><br><span class="line">    enable: true  #是否开启复制功能</span><br><span class="line">    # Show text copy result</span><br><span class="line">    show_result: true #是否显示提示的复制结果</span><br></pre></td></tr></table></figure>
<p>接着，将鼠标移动到代码块中，便可以看到结果。默认按钮是中文“复制”，若是想改为英文“copy”，可进入<code>blog/themes/next/languages/zh-CN.yml</code>文件中，将下面部分改了即可：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">copy_button: copy</span><br><span class="line">copy_success: succeed</span><br><span class="line">copy_failure: failed</span><br><span class="line">copyright:</span><br><span class="line">   author: 本文作者</span><br></pre></td></tr></table></figure>
<p>这个文件夹中保留了所有的中英部分的对应关系，大家想改各标签名字的话，可以将这个文件中对应的部分改了即可。</p>
<h4 id="2-6-增加版权信息"><a href="#2-6-增加版权信息" class="headerlink" title="2.6 增加版权信息"></a>2.6 增加版权信息</h4><p>博文写好了，怎么说也是作者的一番心血，我们不去抄袭别人的作品，也不希望别人什么都不说带走我们的作品，所以，我们需要在底部做一个版权申明：<br>next主题中现在已经是集成了这个功能的了，我们只在主题配置文件中搜索<code>copyright</code>,并把<code>enable</code>的值改为<code>true</code>即可.</p>
<h3 id="3-next主题底部优化"><a href="#3-next主题底部优化" class="headerlink" title="3. next主题底部优化"></a>3. next主题底部优化</h3><h4 id="3-1为文章增加评论功能"><a href="#3-1为文章增加评论功能" class="headerlink" title="3.1为文章增加评论功能"></a>3.1为文章增加评论功能</h4><p>next主题的6.x版里面已经集成了很多评论了，包括Gitment和Valine，大家有兴趣可以去试一试。</p>
<h4 id="3-2增加在线联系Daovoice"><a href="#3-2增加在线联系Daovoice" class="headerlink" title="3.2增加在线联系Daovoice"></a>3.2增加在线联系Daovoice</h4><p><a href="http://dashboard.daovoice.io/get-started?invite_code=5f355066" target="_blank" rel="noopener">链接</a><br>注册完成后会得到一个 app_id</p>
<blockquote>
<p>daovoice(‘init’, {<br>  app_id: “<strong>***</strong>“<br>});<br>daovoice(‘update’);</p>
</blockquote>
<p>记下这个app_id的值，然后打开<code>/blog/themes/next/layout/_partials/head/head.swig</code>文件，在如下位置插入代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> Date();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(window,document,<span class="string">"script"</span>,(<span class="string">'https:'</span> == document.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/0f81ff2f.js"</span>,<span class="string">"daovoice"</span>)</span><br><span class="line">  daovoice(<span class="string">'init'</span>, &#123;</span><br><span class="line">      app_id: <span class="string">"&#123;&#123;theme.daovoice_app_id&#125;&#125;"</span></span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(<span class="string">'update'</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>接着打开主题配置文件，在最后写下如下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Online contact </span><br><span class="line">daovoice: <span class="keyword">true</span></span><br><span class="line">daovoice_app_id: 这里填你的刚才获得的 app_id</span><br></pre></td></tr></table></figure>
<h4 id="3-3-增加站点访问人数和总访问量"><a href="#3-3-增加站点访问人数和总访问量" class="headerlink" title="3.3 增加站点访问人数和总访问量"></a>3.3 增加站点访问人数和总访问量</h4><p>打开主题配置文件，搜索<code>busuanzi</code>，将<code>enable</code>的值改为<code>true</code>即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  total_visitors: <span class="keyword">true</span></span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: <span class="keyword">true</span></span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: <span class="keyword">true</span></span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>

<h2 id="五、发表博客"><a href="#五、发表博客" class="headerlink" title="五、发表博客"></a>五、发表博客</h2><p>发表文章<br>注意：如果自己直接新建文件，一定要记得加上文件最上方的参数，即下面的相关内容，还有编码请用 UTF-8。</p>
<p>关于文件最上方的参数，参见 Hexo 官方文档的 Front-matter 和页面变量，下面是我的总结：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># ！！！！！！！！！！</span><br><span class="line"># 每一项的 : 后面均有一个空格</span><br><span class="line"># 且 : 为英文符号</span><br><span class="line"># ！！！！！！！！！！</span><br><span class="line"></span><br><span class="line">title:</span><br><span class="line"># 文章标题，可以为中文</span><br><span class="line"></span><br><span class="line">date:</span><br><span class="line"># 建立日期，如果自己手动添加，请按固定格式</span><br><span class="line"># 就算不写，页面每篇文章顶部的发表于……也能显示</span><br><span class="line"># 只要在主题配置文件中，配置了 created_at 就行</span><br><span class="line"># 那为什么还要自己加上？</span><br><span class="line"># 自定义文章发布的时间</span><br><span class="line"></span><br><span class="line">updated:</span><br><span class="line"># 更新日期，其它与上面的建立日期类似</span><br><span class="line"># 不过在页面每篇文章顶部，是更新于……</span><br><span class="line"># 在主题配置文件中，是 updated_at</span><br><span class="line"></span><br><span class="line">permalink:</span><br><span class="line"># 若站点配置文件下的 permalink 配置了 title</span><br><span class="line"># 则可以替换文章 URL 里面的 title（文章标题）</span><br><span class="line"></span><br><span class="line">categories:</span><br><span class="line"># 分类，支持多级，比如：</span><br><span class="line"># - technology</span><br><span class="line"># - computer</span><br><span class="line"># - computer-aided-art</span><br><span class="line"># 则为 technology/computer/computer-aided-art</span><br><span class="line"># （不适用于 layout: page）</span><br><span class="line"></span><br><span class="line">tags:</span><br><span class="line"># 标签</span><br><span class="line"># 多个可以这样写 [标签1,标签2,标签3]</span><br><span class="line"># （不适用于 layout: page）</span><br><span class="line"></span><br><span class="line">description:</span><br><span class="line"># 文章的描述，在每篇文章标题下方显示</span><br><span class="line"># 并且作为网页的 description 元数据</span><br><span class="line"># 如果不写，则自动取 &lt;!-- more --&gt;</span><br><span class="line"># 之前的文字作为网页的 description 元数据</span><br><span class="line"></span><br><span class="line">keywords:</span><br><span class="line"># 关键字，并且作为网页的 keywords 元数据</span><br><span class="line"># 如果不写，则自动取 tags 里的项</span><br><span class="line"># 作为网页的 keywords 元数据</span><br><span class="line"></span><br><span class="line">comments:</span><br><span class="line"># 是否开启评论</span><br><span class="line"># 默认值是 true</span><br><span class="line"># 要关闭写 false</span><br><span class="line"></span><br><span class="line">layout:</span><br><span class="line"># 页面布局，默认值是 post，默认值可以在</span><br><span class="line"># 站点配置文件中修改 default_layout</span><br><span class="line"># 另：404 页面可能用到，将其值改为 false</span><br><span class="line"></span><br><span class="line">type:</span><br><span class="line"># categories，目录页面</span><br><span class="line"># tags，标签页面</span><br><span class="line"># picture，用来生成 group-pictures</span><br><span class="line"># quote？</span><br><span class="line"># https://io-oi.me/tech/hello-world/</span><br><span class="line"></span><br><span class="line">photos:</span><br><span class="line"># Gallery support，用来支持画廊╱相册，用法如下：</span><br><span class="line"># - photo_url_1</span><br><span class="line"># - photo_url_2</span><br><span class="line"># - photo_url_3</span><br><span class="line"># https://io-oi.me/tech/hello-world/</span><br><span class="line"></span><br><span class="line">link:</span><br><span class="line"># 文章的外部链接</span><br><span class="line"># https://io-oi.me/tech/hello-world/</span><br><span class="line"></span><br><span class="line">image:</span><br><span class="line"># 自定义的文章摘要图片，只在页面展示，文章内消失</span><br><span class="line"># 此项只有参考本文 5.14 节配置好，否则请勿添加！</span><br><span class="line"></span><br><span class="line">sticky:</span><br><span class="line"># 文章置顶</span><br><span class="line"># 此项只有参考本文 5.15 节配置好，否则请勿添加！</span><br><span class="line"></span><br><span class="line">password:</span><br><span class="line"># 文章密码，此项只有参考教程：</span><br><span class="line"># http://shenzekun.cn/hexo的next主题个性化配置教程.html</span><br><span class="line"># 第 24 节，配置好，否则请勿添加！</span><br><span class="line"># 发现还是有 bug 的，就是右键在新标签中打开</span><br><span class="line"># 然后无论是否输入密码，都能看到内容</span><br></pre></td></tr></table></figure>

<h2 id="六、结语"><a href="#六、结语" class="headerlink" title="六、结语"></a>六、结语</h2><p>第一篇万字的博客，终于码完了，累死lz了，如果你对我的文章感兴趣，欢迎留言或者私信我.</p>
<blockquote>
<p>我的Github地址:<br><a href="https://github.com/wsuo" target="_blank" rel="noopener">https://github.com/wsuo</a><br>我的个人网站地址:<br><a href="https://wsuo.github.io">https://wsuo.github.io</a></p>
</blockquote>
<p>参考文章：<br>1.<a href="https://cherryblog.site/Hexo-high-level-tutorialcloudmusic,bg-customthemes-statistical.html" target="_blank" rel="noopener">hexo高阶教程next主题优化</a><br>2.<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a><br>3.<a href="https://www.dingxuewen.com/categories/Site/" target="_blank" rel="noopener">Hexo搭建博客的个性化设置</a><br>4.<a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a><br>5.<a href="http://eternalzttz.com/hexo-next.html" target="_blank" rel="noopener">hexo next主题优化，打造个人精致网站</a></p>
]]></content>
  </entry>
</search>
